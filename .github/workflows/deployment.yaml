name: Build and deploy action
on: [push]
jobs:
  frontend:
    runs-on: ubuntu-20.04
    steps:
      - name: Get repository code
        uses: actions/checkout@v3
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        run: |
          pwd
          cd frontend
          pwd
          cd ..
          pwd
          cd .. 
          pwd 
          npm ci
      - name: Lint application
        run: |
          cd frontend
          npm run lint

      # - name: Test
      #   run: |
      #     pwd
      #     cd frontend
      #     pwd
      #     npm run test

      # - name: Build application
      #   run: |
      #     cd frontend
      #     npm run build -y
  # backend:
  #   runs-on: ubuntu-20.04
  #   steps:
  #     - name: Get repository code
  #       uses: actions/checkout@v3
  #     - name: Cache dependencies
  #       uses: actions/cache@v3
  #       with:
  #         path: ~/backend/venv
  #         key: venv-${{ hashFiles('**/backend/venv') }}
  #     - name: Install dependencies
  #       run: |
  #         cd backend: 
  #         source venv/bin/activate 
  #         pip install -r requirements.txt
  #     - name: Lint application
  #       run: |
  #         cd backend:

  #     # - name: Test
  #     #   run: |
  #     #     pwd
  #     #     cd frontend
  #     #     pwd
  #     #     npm run test
  # deploy:
  #   runs-on: ubuntu-20.04
  #   needs: [frontend, backend]
  #   steps:
  #     - name: clone files to server
  #       uses: appleboy/scp-action@master
  #       with:
  #         host: ${{ secrets.HOST }}
  #         username: ${{ secrets.SSH_USERNAME }}
  #         password: ${{ secrets.SSH_PASSWORD }}
  #         source: "*"
  #         target: "app"
  #         strip_components: 1
  #     - name: run docker-compose
  #       uses: appleboy/ssh-action@master
  #       with:
  #         host: ${{ secrets.HOST }}
  #         username: ${{ secrets.SSH_USERNAME }}
  #         password: ${{ secrets.SSH_PASSWORD }}
  #         script: |
  #           cd app
  #           echo ${{ secrets.SSH_PASSWORD }} | sudo -S docker-compose up -d
